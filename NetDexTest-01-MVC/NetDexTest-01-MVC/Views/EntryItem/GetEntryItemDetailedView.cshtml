
@model IEnumerable<NetDexTest_01_MVC.Models.ViewModels.EntryItemDTO>
@{

    ViewData["Title"] = "Entry Item Details";
    await Console.Out.WriteLineAsync("\n\n-----Entry Item Details Reached!----------\n\n");
    var loggedInEmail = ViewData["LoggedInEmail"]?.ToString();
    var lastPerson = ViewData["LastPerson"]?.ToString();
    @* using (IPersonService u = new SomeDisposableType())
    {
        OperateOnType(u);
    } *@
    

}

<h1 id="entryHeading">GetEntryItemDetailedView</h1>
<div id="emergencyLink">
    <a href="/dex/u/@ViewData["LoggedInEmail"]/p/@TempData["LastPerson"]/rec/list/ie">&lArr; Back to Entry List view</a>
</div>

<input type="hidden" id="recordCollectorId" value="@TempData["tRecordCollectorId"]" />
<input type="hidden" id="entryItemId" value="@ViewData["entryId"]" />
<input type="hidden" id="email" value="@ViewData["LoggedInEmail"]" />
<input type="hidden" id="username" value="@TempData["tUsername"]" />
<input type="hidden" id="lastPerson" value="@TempData["LastPerson"]" />
@* @try
{

}
catch (Exception ex)
{
    <p id="errorOccurred">Error: " @ex "</p>
}
 *@

@TempData["tEmail"]
<h1> </h1>
@* @TempData["LastPerson"] *@
<hr/>

@section Scripts {
    <script src="~/js/entryItemDetails.js" type="module" defer></script>
    <script type="text/javascript">
    </script>
    @{ await Html.RenderPartialAsync("_GetEntryItemDetailedView");
    }
}
