@using System.Security.Claims;
@model NetDexTest_01_MVC.Models.ViewModels.NewPersonVM

@{
    ViewData["Title"] = "Create Person";
}

<h1>CreatePerson</h1>

<input type="hidden" id="emailexample" value="@ViewData["LoggedInEmail"]" />


<h4 id="headOfPerson" onclick="tellMeForm()">Person</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreatePerson" id="formCreatePerson">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label type="hidden"  asp-for="Email" class="control-label">User email</label>
                <input type="hidden" readonly id="email" value="@ViewData["LoggedInEmail"]"  asp-for="Email" />

@*                 <input asp-for="Email" readonly value="@(User.Claims.FirstOrDefault(c=>c.Type == ClaimTypes.Email).Value)" class="form-control" />
 *@
 @*                 <input asp-for="Email" readonly value="@(User.Claims.FirstOrDefault(c=>c.Type == ClaimTypes.Email).Value)" class="form-control" />
 *@            </div>
            <div class="form-group">
                <label asp-for="Nickname" class="control-label"></label>
                <input asp-for="Nickname" class="form-control" />
                <span asp-validation-for="Nickname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <input asp-for="Gender" class="form-control" />
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pronouns" class="control-label"></label>
                <input asp-for="Pronouns" class="form-control" />
                <span asp-validation-for="Pronouns" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label"></label>
                <input asp-for="Rating" class="form-control" />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Favorite" /> @Html.DisplayNameFor(model => model.Favorite)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
@*                 <input type="submit" value="Create" class="btn btn-primary" />
 *@            </div>
        </form>
    </div>
</div>

<div>
    @* asp-action="DexIndexSingle" *@
    <a class="btn"  asp-controller="dex" asp-action="u" asp-route-id="@ViewData["LoggedInEmail"]">Back to List</a> 
    <br />
    <a asp-controller="nickname" asp-action="edit" asp-protocol="https" asp-host="localhost:7005/dex/u/@ViewData["LoggedInEmail"]/p" asp-route-id="@ViewData["LoggedInEmail"]">testing long route 1</a>
    <br />
    <a asp-controller="rec" asp-action="edit" asp-protocol="https" asp-host="localhost:7005/dex/u/@ViewData["LoggedInEmail"]/p/nickname" asp-route-id="@ViewData["LoggedInEmail"]">testing route to record</a>
</div> /dex/u/${email}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/personCreate.js" type="module"></script>
}
