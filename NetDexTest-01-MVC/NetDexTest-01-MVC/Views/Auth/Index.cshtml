@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject IUserSessionService UserSession

@{
    ViewData["Title"] = "Auth Home Page";
}


@if (UserSession.IsLoggedIn())
{
    <p>Welcome @UserSession.GetEmail()</p>
    @foreach(var r in UserSession.GetRoles())
    {
        <p>@r</p>
    }

}

<h1>NetDexTest_MVC Auth Homepage</h1>

<h4>Please click on one of the options below</h4>


<!--

-->
@if(HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
{
    <h4>Logged In</h4>
}
else
{
    <p>Identity failed to load. Not logged in</p>
}



@if (User != null)
{
    <p>
    User is null!
    </p>
}
else
{
    <p>
        @User.ToString()
    </p>
    <p>
       
    </p>
}


@* 
<p>
    is user authenticated?
</p>
<p>
@User.Identity.IsAuthenticated
</p>
<p>
    authentication type?
</p>
<p>
@User.Identity.AuthenticationType
</p>
<p>
    user name?
</p>
<p>
@User.Identity.Name
</p>
<p>
    user claims?
</p>
<p>
    @{
        var list = User.Claims.ToList();
        foreach (var i in list)
        {
            <p> - @i.ToString() </p>
        }
    }
</p> *@



@if (User.Identity.IsAuthenticated)
{
    <p>Hello @(User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email).Value)</p>

    <!--TODO-->
    <a class="btn btn-primary" asp-controller="articles" asp-action="getArticles">View All Articles</a>
    <a class="btn btn-success" asp-controller="people" asp-action="createPerson">Create New Person</a>

    <a class="btn btn-danger" asp-controller="auth" asp-action="logout">Logout</a>

    @if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
    {
        <a class="btn btn-primary" asp-controller="user" asp-action="ListUsers">View All Users</a>

    }

}

else
{
    <a class="btn btn-primary" asp-controller="auth" asp-action="register">Register</a>
    <a class="btn btn-success" asp-controller="auth" asp-action="login">Login</a>
}