@inject IUserSessionService _userSessionService
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@using System.Text
@inject IHttpContextAccessor HttpContextAccessor


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NetDexTest_01_MVC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/NetDexTest_01_MVC.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">NetDexTest_01_MVC</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item" id="showcookienav">
                            <a class="nav-link text-dark" id="showcookienavlink">CookieView</a>
                        </li>
                        <li class="nav-item d-none" id="hidecookienav">
                            <a class="nav-link text-dark" id="hidecookienavlink">Hide CookieView</a>
                        </li>

                    </ul>
                </div>
                <div class="userInfo">

                    @if (User.Identity.IsAuthenticated || _userSessionService.IsLoggedIn())
                    {
                        <div id="infoLeft" class="d-inline-block nav-item">
                            <p>Hello @(_userSessionService.GetUsername())</p>
                            @{
                                var listRoles = await _userSessionService.GetRolesAsync();
                                var data = new StringBuilder();
                                string outputter = "";
                                string delimit = ", ";
                                if (listRoles.Count == 1) delimit = "";
                                for ( int i = 0; i < listRoles.Count; i++)
                                {
                                    data.Append(outputter);
                                    data.Append(listRoles[i]);
                                    if (listRoles.Count - 1 > (i))
                                    {
                                        data.Append(delimit);

                                    }
                                }
                                string dataout = data.ToString();
                                <p>Roles: @dataout</p>
                            }
                        </div>
                        
                        //var listRoles = await _userSessionService.GetRolesAsync();
                            //var authAccess = ["Admin", "Administrator", "Mod", "Moderator"];
                        if (listRoles.Where(s => s == "Admin" || s == "Administrator" || s == "Mod" || s == "Moderator").Any())
                        {
                            <div class="d-inline-block nav-item">
                                <a class="btn btn-dark" asp-controller="user" asp-action="ListUsers">View All Users</a>   
                            </div>

                        }

                        <div class="d-inline-block nav-item" >
                            <a class="btn btn-primary" asp-controller="people" asp-action="ListDexIndex">View Dex</a>
                        </div>
                        <div class="infoRightable-info d-inline-block">
                            <a class="btn btn-danger" asp-controller="auth" asp-action="logout">Logout</a>

                        </div>



                    }
                    else
                    {
                        <div class="infoRightable-info d-rigk">
                            <a class="btn btn-success" asp-controller="auth" asp-action="login">Login</a>

                        </div>

                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @{
            // TODO
            
            
            }
            @RenderBody()
            @await RenderSectionAsync("Scripts", required: false)




        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - NetDexTest_01_MVC - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script type="text/javascript">
        const cookielink1 = document.getElementById('showcookienavlink');
        const cookielinkBox1 = document.getElementById('showcookienav');
        const cookielink2 = document.getElementById('hidecookienavlink');
        const cookielinkBox2 = document.getElementById('hidecookienav');
        const cookiebox = document.getElementById('cookieview');

        function showCookies(evt) {
            evt.preventDefault();
            cookielink1.classList.add('d-none');
            cookielinkBox1.classList.add('d-none');
            cookielink2.classList.remove('d-none');
            cookielinkBox2.classList.remove('d-none');
            cookiebox.classList.remove('d-none');
        }
        function hideCookies(evt) {
            evt.preventDefault();
            cookielink2.classList.add('d-none');
            cookielinkBox2.classList.add('d-none');
            cookielink1.classList.remove('d-none');
            cookielinkBox1.classList.remove('d-none');
            cookiebox.classList.add('d-none');
        }
        cookielink1.addEventListener("click", showCookies);
        cookielink2.addEventListener("click", hideCookies);

    
    </script>
    
    
    
@*     @await RenderSectionAsync("Scripts", required: false)*@
</body>
</html>
